[user]
	name = thiago.roberto
	email = thiago.roberto@hexagon.com

[alias]
  # Who am I?
  me = config user.name
  # Add all files to staged area
  a = add --all
  # Remove files from staged area
  unstage = reset HEAD --
  # Commit with message
  c = "!f() { git commit -m \"$*\"; }; f"
  # Commit with -n and message
  cn = "!f() { git commit -n -m \"$*\"; }; f"
  # Undo the last made commit
  rollback = reset --soft HEAD~1
  # Amend the previous commit to include new changes
  amend = commit --amend --no-edit
  # Amend the previous commit with -n to include new changes
  amendn = commit --amend --no-edit -n
  # Stash all files (even untracked)
  stadd = stash --include-untracked
  # Apply top stash (keep it in stash)
  stapp = stash apply

  # Less verbose status
  s = status -sb
  # Pretty log
  l = log --color --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit
  # Remove files cached but on git ignore
  rm = rm -r --chached .
  # create a new branch
  bn = checkout -b
  # delete a branch
  bd = branch -d
  # move to a branch
  bm = checkout
  # list all branches
  bl = branch -a  
  # rebase iteractive
  rbi = rebase -i 
  # rebase abort
  rba = rebase --abort 
  # rebase continue
  rbc = rebase --continue 
  # Remote commits ahead of mine
  incoming = !(git fetch --quiet && git log --pretty=format:'%C(yellow)%h %C(white)- %C(red)%an %C(white)- %C(cyan)%d%Creset %s %C(white)- %ar%Creset' ..@{u})
  # Remote commits ahead of local
  outgoing = !(git fetch --quiet && git log --pretty=format:'%C(yellow)%h %C(white)- %C(red)%an %C(white)- %C(cyan)%d%Creset %s %C(white)- %ar%Creset' @{u}..)
  # Undo modifications to a file
  undo = checkout --
  # Review commits before pushing
  review = rebase -i @{u}
  # Update submodules
  submodules = submodule update --init --recursive
  # Refresh the hole project
  refresh = !(git fetch && git pull && git submodule update --init --recursive && git status && ./dume/setup_git_repo.sh)
[safe]
	directory = /opt/cucumber-cpp
